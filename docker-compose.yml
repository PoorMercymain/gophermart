version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: gophermart-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./gophermart-mongo:/data/db
  postgres:
    image: postgres:13.6
    container_name: gophermart-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./gophermart-postgres:/var/lib/postgresql/data
    ports:
      - "3000:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: [ "postgres", "-c", "log_statement=all" ]
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
      - ./pgadminconfig/servers.json:/pgadmin4/servers.json
      - ./pgadminconfig/pgpass:/pgpass
  gophermart:
    build:
      context: .
      dockerfile: DockerfileGophermart
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
      accrual:
        condition: service_started
    environment:
      - DATABASE_URI=${GOPHERMART_DATABASE_URI}
      - ACCRUAL_ADDRESS=${ACCRUAL_ADDRESS}
      - RUN_ADDRESS=${GOPHERMART_RUN_ADDRESS}
    ports:
      - "8080:8080"
  accrual:
    build:
      context: .
      dockerfile: DockerfileAccrual
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URI=${ACCRUAL_DATABASE_URI}
      - RUN_ADDRESS=${ACCRUAL_RUN_ADDRESS}
    ports:
      - "8085:8085"
