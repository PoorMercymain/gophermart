name: gophermart

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:

  build:
    runs-on: ubuntu-latest
    container: golang:1.19

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
          --user postgres

      mongodb:
        image: mongo:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create databases
        run: |
          apt update
          apt install -y postgresql-client
          export PGPASSWORD=${{secrets.PGPASSWORD}}
          psql -h postgres -U postgres -c "CREATE DATABASE gophermart;"
          psql -h postgres -U postgres -c "CREATE DATABASE accrual;"

      - name: Download autotests binaries
        uses: robinraju/release-downloader@v1.2
        with:
          repository: Yandex-Practicum/go-autotests-bin
          latest: true
          fileName: "*"
          out-file-path: .tools

      - name: Setup autotest binary
        run: |
          chmod -R +x $GITHUB_WORKSPACE/.tools
          mv $GITHUB_WORKSPACE/.tools/gophermarttest /usr/local/bin/gophermarttest
          mv $GITHUB_WORKSPACE/.tools/random /usr/local/bin/random

      - name: Build binaries
        run: |
          (cd cmd/gophermart && go build -buildvcs=false -o gophermart)
          (cd cmd/accrual && go build -buildvcs=false -o accrual)

      - name: Gophermart Test
        run: |
          export ACCRUAL_PORT=$(random unused-port)
          while [ "$ACCRUAL_PORT" -eq 8080 ]; do
            export ACCRUAL_PORT=$(random unused-port)
          done
          echo $ACCRUAL_PORT
          export ACCRUAL_ADDRESS="http://localhost:$ACCRUAL_PORT"
          echo $ACCRUAL_ADDRESS;
          gophermarttest \
            -test.v -test.run=^TestGophermart$ \
            -gophermart-binary-path=cmd/gophermart/gophermart \
            -gophermart-host=localhost \
            -gophermart-port=8080 \
            -gophermart-database-uri="postgresql://postgres:postgres@postgres/gophermart?sslmode=disable" \
            -accrual-binary-path=cmd/accrual/accrual \
            -accrual-host=localhost \
            -accrual-port="$ACCRUAL_PORT" \
            -accrual-database-uri="postgresql://postgres:postgres@postgres/accrual?sslmode=disable"

      - name: Generate test coverage badge
        run: |
          SCRIPT_DIR="$(dirname -- "$(readlink -f "${BASH_SOURCE[0]}")")"
          OUT_DIR="${1-$SCRIPT_DIR}"
          OUT_FILE="$(mktemp)"
          go test ./... -coverpkg "$(go list)/..." -coverprofile "$OUT_FILE"
          COVERAGE=$(go tool cover -func="$OUT_FILE" | tail -1 | grep -Eo '[0-9]+\.[0-9]')
          if awk "BEGIN {exit !($COVERAGE >= 90)}"; then
          COLOR=brightgreen
          elif awk "BEGIN {exit !($COVERAGE >= 80)}"; then
          COLOR=green
          elif awk "BEGIN {exit !($COVERAGE >= 70)}"; then
          COLOR=yellowgreen
          elif awk "BEGIN {exit !($COVERAGE >= 60)}"; then
          COLOR=yellow
          elif awk "BEGIN {exit !($COVERAGE >= 50)}"; then
          COLOR=orange
          else
          COLOR=red
          fi
          curl -s "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR" > "$OUT_DIR/coverage.svg"
  

      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: logfile.log